openapi: 3.0.3
info:
  title: Music Library API
  version: 1.0.0
  description: API для музыкальной библиотеки
paths:
  /api/library/albums/:
    get:
      operationId: api_library_albums_list
      description: Получить список альбомов
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAlbumList'
          description: ''
    post:
      operationId: api_library_albums_create
      description: Создать альбом
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Album'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
  /api/library/albums/{id}/:
    get:
      operationId: api_library_albums_retrieve
      description: Получить альбом по id
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Альбом.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    put:
      operationId: api_library_albums_update
      description: Заменить альбом
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Альбом.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Album'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    patch:
      operationId: api_library_albums_partial_update
      description: Редактировать альбом
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Альбом.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    delete:
      operationId: api_library_albums_destroy
      description: Удалить альбом
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Альбом.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/library/artists/:
    get:
      operationId: api_library_artists_list
      description: Получить список исполнителей
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedArtistList'
          description: ''
    post:
      operationId: api_library_artists_create
      description: Создать исполнителя
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Artist'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
          description: ''
  /api/library/artists/{id}/:
    get:
      operationId: api_library_artists_retrieve
      description: Получить исполнителя по id
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Исполнитель.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
          description: ''
    put:
      operationId: api_library_artists_update
      description: Заменить исполнителя
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Исполнитель.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Artist'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
          description: ''
    patch:
      operationId: api_library_artists_partial_update
      description: Редактировать исполнителя
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Исполнитель.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedArtist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedArtist'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
          description: ''
    delete:
      operationId: api_library_artists_destroy
      description: Удалить исполнителя
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Исполнитель.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/library/songs/:
    get:
      operationId: api_library_songs_list
      description: Получить список песен
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSongList'
          description: ''
    post:
      operationId: api_library_songs_create
      description: Создать песню
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Song'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
          description: ''
  /api/library/songs/{id}/:
    get:
      operationId: api_library_songs_retrieve
      description: Получить песню по id
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Песня.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
          description: ''
    put:
      operationId: api_library_songs_update
      description: Заменить песню
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Песня.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Song'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
          description: ''
    patch:
      operationId: api_library_songs_partial_update
      description: Редактировать песню
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Песня.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSong'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSong'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
          description: ''
    delete:
      operationId: api_library_songs_destroy
      description: Удалить песню
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Песня.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Album:
      type: object
      description: Сериализация модели альбома
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 128
        release_date:
          type: string
          format: date
          title: Дата релиза
        songs:
          type: string
          readOnly: true
      required:
      - id
      - release_date
      - songs
      - title
    Artist:
      type: object
      description: Сериализация модели исполнителя
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Исполнитель
          maxLength: 128
      required:
      - id
      - title
    PaginatedAlbumList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Album'
    PaginatedArtistList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Artist'
    PaginatedSongList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Song'
    PatchedAlbum:
      type: object
      description: Сериализация модели альбома
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 128
        release_date:
          type: string
          format: date
          title: Дата релиза
        songs:
          type: string
          readOnly: true
    PatchedArtist:
      type: object
      description: Сериализация модели исполнителя
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Исполнитель
          maxLength: 128
    PatchedSong:
      type: object
      description: Сериализация модели песни
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 128
        duration:
          type: integer
          title: Длительность (сек.)
        artist:
          allOf:
          - $ref: '#/components/schemas/Artist'
          readOnly: true
    Song:
      type: object
      description: Сериализация модели песни
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 128
        duration:
          type: integer
          title: Длительность (сек.)
        artist:
          allOf:
          - $ref: '#/components/schemas/Artist'
          readOnly: true
      required:
      - artist
      - duration
      - id
      - title
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
